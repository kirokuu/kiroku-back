name: Deploy to kiroku

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: kirocu-server-config-keys
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 디스크 상태 파악
      - name: Check disk usage
        run: |
          df -h
          du -sh *

      # 불필요한 Docker, Gradle 캐시 정리
      - name: Prune Docker and clean Gradle caches
        run: |
          sudo docker volume prune -f
          rm -rf ~/.gradle/caches
          rm -rf ~/.gradle/daemon
          rm -rf ~/.gradle/native
          rm -rf .gradle

      # 배포 및 빌드 실행
      - name: Connect & Deploy to Production
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          ##password: ${{ secrets.PROD_PASSWORD }} key와 같이 사용하면 충돌
          key: ${{ secrets.PROD_SSH_KEY }}
          passphrase: ${{ secrets.PROD_SSH_PASSPHRASE }}
          script: |
            set -e
            
            cd /app/kirocudev
            sudo rm -rf kiroku-back
            
            git clone https://github.com/bottleOne/kiroku-back.git
            cd kiroku-back
            
            echo "GOOGLE_API_KEY=${{ vars.GOOGLE_API_KEY }}" > .env
            echo "GOOGLE_SECRET=${{ vars.GOOGLE_SECRET }}" >> .env
            echo "KAKAO_API_KEY=${{ vars.KAKAO_API_KEY }}" >> .env

            echo "----Restart Docker"
            ./gradlew build --no-daemon
            
            sudo docker-compose down --volumes --remove-orphans
            # sudo docker system prune -af 이미지까지 모두 날리기 때문에X
            sudo docker builder prune -af  # 빌드 캐시만 제거
            sudo docker image prune -af    # dangling image 제거
  
            sudo docker-compose pull
            sudo docker-compose build
            sudo docker-compose up -d --force-recreate
            
            echo "----Container Logs"
            sudo docker logs kiroku-nginx || true
            sudo docker logs kiroku-spring || true

      - name: Retry deploy after cache clean (only if failed)
        id: deploy-cache
        if: steps.deploy-cache.outcome == 'failure'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          passphrase: ${{ secrets.PROD_SSH_PASSPHRASE }}
          script: |
            echo "❌ 캐시 문제로 인해 재시도 중..."
            
            # sudo docker system prune -af 이미지까지 모두 날리기 때문에X
            sudo docker builder prune -af  # 빌드 캐시만 제거
            sudo docker image prune -af    # dangling image 제거
            
            set -e
            cd /app/kirocudev
            sudo rm -rf kiroku-back
            git clone https://github.com/bottleOne/kiroku-back.git
            cd kiroku-back
            
            echo "GOOGLE_API_KEY=${{ vars.GOOGLE_API_KEY }}" > .env
            echo "GOOGLE_SECRET=${{ vars.GOOGLE_SECRET }}" >> .env
            echo "KAKAO_API_KEY=${{ vars.KAKAO_API_KEY }}" >> .env
            
            rm -rf ~/.gradle/caches ~/.gradle/daemon ~/.gradle/native .gradle
            
            ./gradlew build --no-daemon --no-build-cache
            
            sudo docker-compose down --volumes --remove-orphans
            sudo docker volume prune -f
            sudo docker builder prune -af
            sudo docker image prune -af
            
            sudo docker-compose build
            sudo docker-compose up -d --force-recreate
            
            sudo docker logs kiroku-back_web_1 || true
            sudo docker logs kiroku-back_spring_1 || true

